apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: keycloak-realm-import
  namespace: redhat-keycloak
spec:
  keycloakCRName: keycloak
  realm:
    realm: "llama-realm"
    displayName: "Llama Stack Realm"
    enabled: true
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: true
    editUsernameAllowed: false
    bruteForceProtected: true
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    defaultRoles:
      - "offline_access"
      - "uma_authorization"
    clients:
      # Llama Stack Client - THE ONLY CLIENT for all components
      # Used by: Playground UI, Llama Stack Server, MCP Server, Kubernetes
      - clientId: "llama-stack"
        name: "Llama Stack Client"
        description: "Single OAuth client for all Llama Stack and Kubernetes components"
        enabled: true
        clientAuthenticatorType: "client-secret"
        secret: "CHANGE_ME_IN_PRODUCTION"
        # ✅ Enable standard flow for user login via playground
        standardFlowEnabled: true
        implicitFlowEnabled: false
        # ✅ Enable direct grants for testing
        directAccessGrantsEnabled: true
        # ✅ Enable service accounts for service-to-service auth
        serviceAccountsEnabled: true
        publicClient: false
        protocol: "openid-connect"
        attributes:
          "access.token.lifespan": "900" # 15 minutes
          "client.session.idle.timeout": "1800" # 30 minutes
          "client.session.max.lifespan": "36000" # 10 hours
        # Playground redirect URIs
        redirectUris:
          - "https://playground.example.com/*"
          - "http://localhost:8501/*"
          - "https://localhost:8443/*"
        # CORS origins
        webOrigins:
          - "https://playground.example.com"
          - "http://localhost:8501"
          - "https://localhost:8443"
          - "*" # Allow all origins (adjust for production)
        defaultClientScopes:
          - "web-origins"
          - "role_list"
          - "profile"
          - "roles"
          - "email"
        optionalClientScopes:
          - "address"
          - "phone"
          - "offline_access"
    users:
      - username: "testuser"
        enabled: true
        emailVerified: true
        email: "testuser@example.com"
        firstName: "Test"
        lastName: "User"
        credentials:
          - type: "password"
            value: "dummy"
            temporary: true
            # NOTE: User password is set to "dummy" for development
            # Password is temporary - user must change on first login!
        realmRoles:
          - "offline_access"
          - "uma_authorization"
        groups:
          - "llama-developers"
    
    groups:
      - name: "llama-developers"
        path: "/llama-developers"
        realmRoles:
          - "offline_access"
          - "uma_authorization"
    roles:
      realm:
        - name: "demo-role"
          description: "Demo role for testing"
          composite: false
          clientRole: false
