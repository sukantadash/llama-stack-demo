# See this open issue for why image layering required
# the nodejs version is deprecated for the golang version of mcp atlassian server
# -- MCP atlassian Server Docker Image not compatible for GKE deployment due to no persistent server mode #457
# https://atlassian.com/atlassian/atlassian-mcp-server/issues/457
FROM golang:1.24.4-alpine AS build
ARG VERSION="dev"

# Set the working directory
WORKDIR /build

# Install git
RUN --mount=type=cache,target=/var/cache/apk \
    apk add git

# Build the server
# go build automatically download required module dependencies to /go/pkg/mod
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=bind,target=. \
    CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=${VERSION} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
    -o /bin/atlassian-mcp-server cmd/atlassian-mcp-server/main.go

# Create startup script with better error handling and debugging
RUN printf '#!/bin/sh\nset -e\necho "=== MCP atlassian Server Startup ==="\necho "Testing atlassian MCP server binary..."\nif ! /usr/local/bin/atlassian-mcp-server --help >/dev/null 2>&1; then\n    echo "Warning: atlassian MCP server test failed, but continuing..."\nfi\necho "Starting mcp-proxy with atlassian MCP server..."\necho "Command: mcp-proxy --host 0.0.0.0 --port 8080 --debug --pass-environment /usr/local/bin/atlassian-mcp-server stdio"\nexec mcp-proxy --host 0.0.0.0 --port 8080 --debug --pass-environment /usr/local/bin/atlassian-mcp-server stdio "$@"\n' > /start-server.sh

# Final stage with mcp-proxy
FROM ghcr.io/sparfenyuk/mcp-proxy:latest

# Install additional dependencies if needed
RUN python3 -m ensurepip && pip install --no-cache-dir uv

# Set environment variables
ENV PATH="/usr/local/bin:$PATH" \
    UV_PYTHON_PREFERENCE=only-system

# Copy the atlassian MCP server binary and startup script from build stage
COPY --from=build /bin/atlassian-mcp-server /usr/local/bin/atlassian-mcp-server
COPY --from=build /start-server.sh /usr/local/bin/start-server.sh

# Make them executable
RUN chmod +x /usr/local/bin/atlassian-mcp-server && \
    chmod +x /usr/local/bin/start-server.sh

# Expose the port for HTTP interface
EXPOSE 8080

# Set working directory
WORKDIR /app

# Use the startup script
ENTRYPOINT ["/usr/local/bin/start-server.sh"]

# Default empty CMD
CMD []